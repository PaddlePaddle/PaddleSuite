# Runtime
use_gpu: true
use_xpu: false
use_mlu: false
use_npu: false
save_dir: output
print_flops: false
print_params: false
use_ema: true
log_iter: 20
snapshot_epoch: 2

# Dataset
metric: MOT
num_classes: 1

# Detection Dataset for training
TrainDataset: !COCODataSet
    dataset_dir: /mnt/yys/dataset/mot_datasets/MOT17
    anno_path: annotations/train_half.json
    image_dir: images/train
    data_fields: ['image', 'gt_bbox', 'gt_class', 'is_crowd']

EvalDataset: !COCODataSet
    dataset_dir: /mnt/yys/dataset/mot_datasets/MOT17
    anno_path: annotations/val_half.json
    image_dir: images/train

TestDataset: !ImageFolder
    dataset_dir: /mnt/yys/dataset/mot_datasets/MOT17
    anno_path: annotations/val_half.json


# MOTDataset for MOT evaluation and inference
EvalMOTDataset: !MOTImageFolder
    dataset_dir: /mnt/yys/dataset/mot_datasets/MOT17
    data_root: images/half
    keep_ori_im: True # set as True in DeepSORT and ByteTrack

TestMOTDataset: !MOTImageFolder
    dataset_dir: /mnt/yys/dataset/mot_datasets/MOT17
    keep_ori_im: True # set True if save visualization images or video


# Reader
worker_num: 4
eval_height: &eval_height 640
eval_width: &eval_width 640
eval_size: &eval_size [*eval_height, *eval_width]

TrainReader:
  sample_transforms:
    - Decode: {}
    - RandomDistort: {}
    - RandomExpand: {fill_value: [123.675, 116.28, 103.53]}
    - RandomCrop: {}
    - RandomFlip: {}
  batch_transforms:
    - BatchRandomResize: {target_size: [320, 352, 384, 416, 448, 480, 512, 544, 576, 608, 640, 672, 704, 736, 768], random_size: True, random_interp: True, keep_ratio: False}
    - NormalizeImage: {mean: [0.485, 0.456, 0.406], std: [0.229, 0.224, 0.225], is_scale: True}
    - Permute: {}
    - PadGT: {}
  batch_size: 8
  shuffle: true
  drop_last: true
  use_shared_memory: true
  collate_batch: true

EvalReader:
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *eval_size, keep_ratio: False, interp: 2}
    - NormalizeImage: {mean: [0.485, 0.456, 0.406], std: [0.229, 0.224, 0.225], is_scale: True}
    - Permute: {}
  batch_size: 2

TestReader:
  inputs_def:
    image_shape: [3, *eval_height, *eval_width]
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *eval_size, keep_ratio: False, interp: 2}
    - NormalizeImage: {mean: [0.485, 0.456, 0.406], std: [0.229, 0.224, 0.225], is_scale: True}
    - Permute: {}
  batch_size: 1


EvalMOTReader:
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: [640, 640], keep_ratio: False, interp: 2}
    - NormalizeImage: {mean: [0.485, 0.456, 0.406], std: [0.229, 0.224, 0.225], is_scale: True}
    - Permute: {}
  batch_size: 1

TestMOTReader:
  inputs_def:
    image_shape: [3, 640, 640]
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: [640, 640], keep_ratio: False, interp: 2}
    - NormalizeImage: {mean: [0.485, 0.456, 0.406], std: [0.229, 0.224, 0.225], is_scale: True}
    - Permute: {}
  batch_size: 1

# Model
ema_black_list: ['proj_conv.weight']

norm_type: sync_bn
use_ema: true
ema_decay: 0.9998
depth_mult: 1.0
width_mult: 1.0
det_weights: https://paddledet.bj.bcebos.com/models/mot/deepsort/ppyoloe_crn_l_36e_640x640_mot17half.pdparams
reid_weights: https://paddledet.bj.bcebos.com/models/mot/deepsort/deepsort_resnet.pdparams

architecture: DeepSORT
pretrain_weights: None


YOLOv3:
  backbone: CSPResNet
  neck: CustomCSPPAN
  yolo_head: PPYOLOEHead
  post_process: ~

  
CSPResNet:
  layers: [3, 6, 6, 3]
  channels: [64, 128, 256, 512, 1024]
  return_idx: [1, 2, 3]
  use_large_stem: True


CustomCSPPAN:
  out_channels: [768, 384, 192]
  stage_num: 1
  block_num: 3
  act: 'swish'
  spp: true

PPYOLOEHead:
  fpn_strides: [32, 16, 8]
  grid_cell_scale: 5.0
  grid_cell_offset: 0.5
  static_assigner_epoch: -1
  use_varifocal_loss: True
  loss_weight: {class: 1.0, iou: 2.5, dfl: 0.5}
  static_assigner:
    name: ATSSAssigner
    topk: 9
  assigner:
    name: TaskAlignedAssigner
    topk: 13
    alpha: 1.0
    beta: 6.0
  nms:
    name: MultiClassNMS
    nms_top_k: 1000
    keep_top_k: 100
    score_threshold: 0.4
    nms_threshold: 0.6

DeepSORT:
  detector: YOLOv3 # PPYOLOe version
  reid: ResNetEmbedding
  tracker: DeepSORTTracker

ResNetEmbedding:
  model_name: "ResNet50"

DeepSORTTracker:
  input_size: [64, 192]
  min_box_area: 0
  vertical_ratio: -1
  budget: 100
  max_age: 70
  n_init: 3
  metric_type: cosine
  matching_threshold: 0.2
  max_iou_distance: 0.9
  motion: KalmanFilter


# Optimizer
epoch: 36
LearningRate:
  base_lr: 0.001
  schedulers:
    - !CosineDecay
      max_epochs: 43
    - !LinearWarmup
      start_factor: 0.001
      epochs: 1

OptimizerBuilder:
  optimizer:
    momentum: 0.9
    type: Momentum
  regularizer:
    factor: 0.0005
    type: L2
# Exporting the model
export:
  post_process: True  # Whether post-processing is included in the network when export model.
  nms: True           # Whether NMS is included in the network when export model.
  benchmark: False    # It is used to testing model performance, if set `True`, post-process and NMS will not be exported.
  fuse_conv_bn: False